"""
Django settings for GyanGunjan project.

Generated by 'django-admin startproject' using Django 5.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""




from pathlib import Path
import os


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure--()%=&kf-qg5cw#mu(jt4ejb!$a0@h=p+@_nqq60+s*z46$!1+'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['143.244.132.118','127.0.0.1']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',
    'home',
    "Profile",
    'contribute',
    'rest_framework',
    'django_filters',
    'ckeditor',


    'tailwind',
    'theme',
    
]



# Optional: Add DRF settings for global configuration
REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.AllowAny',  # Allow anyone to access the API
    ],
    'DEFAULT_PARSER_CLASSES': [
        'rest_framework.parsers.JSONParser',  # Parse JSON data
        'rest_framework.parsers.MultiPartParser',  # Parse file uploads
    ],
}




TAILWIND_APP_NAME='theme'
INTERNAL_IPS=['143.244.132.118','127.0.0.1']
NPM_BIN_PATH = r"C:\Program Files\nodejs\npm.cmd"


CORS_ALLOWED_ORIGINS = [
    # "http://localhost:3000",  # Replace with your Next.js frontend URL
   
    "https://gg-fo96.vercel.app",
    "https://gg-fo96-git-main-vaibhavnagargojes-projects.vercel.app",
    "https://gg-fo96-mcxx27pek-vaibhavnagargojes-projects.vercel.app",


]


#ckeditor config 
CKEDITOR_CONFIGS = {
    'default': {
        'toolbar': 'full',
        'height': 300,
        'width': 800,
        'extraPlugins': 'font', 
        'fontSize_sizes': '8/8px;10/10px;12/12px;14/14px;16/16px;18/18px;20/20px;24/24px;28/28px;32/32px;36/36px;40/40px;48/48px;56/56px;64/64px;',
        'font_names': 'Arial/Arial, Helvetica, sans-serif;'
                      'Times New Roman/Times New Roman, Times, serif;'
                      'Courier New/Courier New, Courier, monospace;'
                      'Georgia/Georgia, serif;'
                      'Crimson Pro/Crimson Pro, serif;', 
    },
}



MIDDLEWARE = [
   
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    # allowd for post request form another ip/port/server
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
]

CORS_ALLOW_ALL_ORIGINS = True   # for allowing cros origin for post request form another request

ROOT_URLCONF = 'GyanGunjan.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'GyanGunjan.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# DATABASES = {  
#     'default': {  
#         'ENGINE': 'django.db.backends.mysql',  
#         'NAME': 'gyangunjan',  
#         'USER': 'root',  
#         'PASSWORD': '8806',  
#         'HOST': '127.0.0.1',  
#         'PORT': '3306',  
#          'OPTIONS': {  
#             'init_command': "SET sql_mode='STRICT_TRANS_TABLES'"  
#         }  
        
#     }  
# }  



# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Kolkata'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),
    ]

STATIC_ROOT= os.path.join(BASE_DIR,'staticfiles')





# managing media 
MEDIA_URL ="/media/"
MEDIA_ROOT = os.path.join(BASE_DIR,"media/")





# login route when admin wants to login
# LOGIN_URL = '/users/login/'





# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# LOGIN_URL = '/Profile/login/'
